version: '3.5'

services:

  mysql:
    image: spec-mysql
    build:
      context: .
      dockerfile: .docker/images/mysql/dockerfile-mysql
    command: --default-authentication-plugin=mysql_native_password
    hostname: mysql
    restart: always
    env_file:
      - .env_dev
    ports:
      - 3306:3306
    security_opt:
      - seccomp:unconfined
    volumes:
      - "./spec_dev_data/spec_mysql_data:/var/lib/mysql"
    networks:
      - spec_network

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8088:80
    env_file:
      - .env_dev
    networks:
      - spec_network

  flask:
    image: spec-flask
    build:
      context: .
      dockerfile: .docker/images/flask/dockerfile-flask
    hostname: flask
    restart: always
    env_file:
      - .env_dev
    depends_on:
      - mysql
    ports:
      - 5000:5000
    volumes:
      - .:/app
      - "./spec_dev_data/avatars:/app/data/avatars"
      - "./spec_dev_data/db:/app/data/db"
      - "./spec_dev_data/log:/app/data/log"
    networks:
      - spec_network
    entrypoint:
      - /app/scripts/entry_point.sh

  registry:
    restart: on-failure
    image: registry:2
    ports:
      - 5010:5000
    environment:
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/data
      - REGISTRY_AUTH=token
      - REGISTRY_AUTH_TOKEN_REALM=https://localhost:5000/token_auth
      - REGISTRY_AUTH_TOKEN_SERVICE=Authentication
      - REGISTRY_AUTH_TOKEN_ISSUER=DCSC_KEEPER_OF_TOKENS
      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/mnt/local/certs/RootCA.crt
      - REGISTRY_HTTP_TLS_CERTIFICATE=/mnt/local/certs/RootCA.crt
      - REGISTRY_HTTP_TLS_KEY=/mnt/local/certs/RootCA.key
    volumes:
      - "./registry_auth/data:/mnt/registry/data"
      - "./registry_auth/certs:/mnt/local/certs"
    networks:
      - spec_network

networks:
  spec_network:
